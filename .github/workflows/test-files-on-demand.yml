name: Cypress tests - Files (On Demand)
on: [workflow_dispatch]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.17.6-chrome100-ff98
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: yarn-build-cache
        with:
          path: |
            **/node_modules
            ~/.cache/Cypress
            **/build
          key: ${{ runner.os }}-node_modules-files-build-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-build-
      - name: Install and show git version
        run: apt-get -y install git && git --version
        id: git-install
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v4
        env:
          REACT_APP_BLOCKNATIVE_ID: ${{ secrets.GH_REACT_APP_BLOCKNATIVE_ID }}
          REACT_APP_FILES_VERIFIER_NAME: ${{ secrets.GH_REACT_APP_FILES_VERIFIER_NAME }}
          REACT_APP_FILES_UUID_VERIFIER_NAME: 'chainsafe-uuid-testnet'
          REACT_APP_TEST: 'true'
          REACT_APP_STRIPE_PK: ${{secrets.GH_REACT_APP_STRIPE_PK}}
          DEBUG: '@cypress/github-action'
        with:
          start: yarn start:files-ui
          # wait for 10min for the server to be ready
          wait-on: 'npx wait-on --timeout 600000 http://localhost:3000'
          # custom test command to run
          command: yarn test:ci:files-ui
      # store the screenshots if the tests fail
      - name: Store screenshots 
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: packages/files-ui/cypress/screenshots
      # store the videos if the tests fail
      # - name: Store videos 
      #   uses: actions/upload-artifact@v1
      #   if: failure()
      #   with:
      #     name: cypress-videos
      #     path: packages/files-ui/cypress/videos

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2.2.0
        if: always()
        env:
          SLACK_TITLE: 'Files UI Test Suite On-Demand Result:'
          SLACK_MESSAGE: ${{ job.status }}
          SLACK_COLOR: ${{ job.status }}
          MSG_MINIMAL: actions url
          SLACK_WEBHOOK: ${{ secrets.SLACK_UI_WEBHOOK }}
          SLACK_FOOTER: 'Test run ${{ github.run_number }} was executed on branch: ${{ github.ref }}'

"use strict";
/**
 * Remove me.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const glob = require("glob");
const lodash_1 = require("lodash");
/**
 * Given a path, it returns paths to package.json files of all packages,
 * and the package JSONs themselves.
 */
function listPkgs(wsRoot, globs) {
    let filesAndDirs = lodash_1.flatMap(globs, g => glob.sync(g));
    const packages = {};
    filesAndDirs.forEach(f => {
        const isDir = fs.lstatSync(path.resolve(wsRoot, f)).isDirectory();
        if (isDir) {
            const pkgJsonPath = path.resolve(wsRoot, f, 'package.json');
            const hasPkgJson = fs.existsSync(pkgJsonPath);
            if (!hasPkgJson) {
                // console.warn(`Warning: ${f} is a directory, but has no package.json`)
                return;
            }
            const pkgJson = JSON.parse(fs.readFileSync(pkgJsonPath, 'utf8'));
            packages[pkgJson.name] = {
                path: path.join(wsRoot, f),
                json: pkgJson
            };
        }
    });
    return packages;
}
exports.listPkgs = listPkgs;
//# sourceMappingURL=workspace.js.map
/// <reference types="node" />
import { ChildProcess } from 'child_process';
export interface CmdOptions {
    rejectOnNonZeroExit: boolean;
    collectLogs: boolean;
    prefixer?: (basePath: string, pkg: string, line: string) => string;
    doneCriteria?: string;
    path: string;
}
export declare class CmdProcess {
    private cmd;
    private pkgName;
    private opts;
    cp: ChildProcess;
    private _closed;
    private _finished;
    private _exitCode;
    readonly finished: Promise<void>;
    readonly closed: Promise<number>;
    readonly exitCode: Promise<number>;
    readonly exitError: Promise<void>;
    doneCriteria?: RegExp;
    constructor(cmd: string, pkgName: string, opts: CmdOptions);
    start(): void;
    private autoPrefix;
    private _start;
}
